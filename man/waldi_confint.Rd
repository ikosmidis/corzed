% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/waldi_confint.R
\name{waldi_confint}
\alias{waldi_confint}
\title{Confidence intervals by inversion of the location-adjusted Wald statistic}
\usage{
waldi_confint(object, level = 0.95, quantiles = NULL, adjust = TRUE,
  which, parallel = TRUE, numerical = TRUE, length = 20,
  return_values = FALSE)
}
\arguments{
\item{object}{a fitted model object (e.g. the result of a
\code{\link{glm}} call)}

\item{level}{the confidence level required. Default is 0.95}

\item{quantiles}{A \code{length(which)} (or
\code{length(coef(object))} if \code{which} is not specified)
times 2 matrix with user-supplied quantiles to be used for the
inversion of the statistics (e.g. for bootstrap studentized
intervals). Default is \code{NULL}. If specified, then the
value for \code{level} is ignored.}

\item{adjust}{if \code{TRUE} (default) use the location-adjusted
Wald statistic, if \code{FALSE} use the standard Wald
statistic}

\item{which}{for which parameters should the statistics be
computed? This can be a numeric or character vector.  The
default (\code{NULL}) is to compute statistics for all
parameters}

\item{parallel}{if \code{TRUE}, the statistics are computed in
parallel using the backend provided to \code{\link{foreach}}}

\item{numerical}{shall numerical derivatives be used for the
computation of the location-adjusted statistics? Default is \code{TRUE}}

\item{length}{The length of the grid on which the location-adjusted
statistic is evaluated. Default is 20. See details.}

\item{return_values}{Return the values of the statistic on the grid
instead of confidence intervals? Default is \code{FALSE}}
}
\description{
Confidence intervals by inversion of the location-adjusted Wald statistic
}
\examples{
clotting <- data.frame(
   conc = c(118,58,42,35,27,25,21,19,18,69,35,26,21,18,16,13,12,12),
   u = c(5,10,15,20,30,40,60,80,100, 5,10,15,20,30,40,60,80,100),
   lot = factor(c(rep(1, 9), rep(2, 9))))

modML <- glm(conc ~ log(u)*lot, data = clotting,
             family = Gamma(link="log"))
waldi_confint(modML, parallel = FALSE)

\dontrun{
## Now do the same in parallel using 4 cores
library("foreach")
library("doMC")
registerDoMC(4)

## Differences between the Wald and location-adjusted Wald statistic
data("babies", package = "waldi")
babies_ml0 <- glm(formula = y ~ day + lull - 1, family = binomial,
                  data = babies)
out_waldi <- waldi_confint(babies_ml0, adjust = TRUE, which = "lullyes",
                             parallel = TRUE, return_values = TRUE)
out_wald <- waldi_confint(babies_ml0, adjust = FALSE, which = "lullyes",
                           parallel = TRUE, return_values = TRUE)
## Statistics and critical values for 95\\\% 2-sided intervals
with(out_waldi, plot(grid, value, type = "l", col = "red"))
with(out_wald, points(grid, value, type = "l", col = "blue"))
abline(a = qnorm(0.975), b = 0, lty = 2)
abline(a = qnorm(0.025), b = 0, lty = 2)
legend(x = "topright", legend = c(expression(t), expression(t^'*')),
       col = c("blue", "red"), lty = 1)
}

}
\seealso{
\code{\link{summary.glm}}
}
